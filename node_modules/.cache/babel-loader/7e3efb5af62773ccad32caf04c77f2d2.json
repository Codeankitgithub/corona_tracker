{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ravik\\\\Desktop\\\\covid_tracker_react\\\\covid_tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = _ref => {\n  _s();\n\n  let {\n    data: {\n      confirmed,\n      deaths,\n      recovered\n    },\n    country\n  } = _ref;\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(_ref2 => {\n        let {\n          date\n        } = _ref2;\n        return date;\n      }),\n      datasets: [{\n        data: dailyData.map(_ref3 => {\n          let {\n            confirmed\n          } = _ref3;\n          return confirmed;\n        }),\n        label: 'Infected',\n        borderColor: '#333ff'\n      }, {\n        data: dailyData.map(_ref4 => {\n          let {\n            deaths\n          } = _ref4;\n          return deaths;\n        }),\n        label: 'Deaths',\n        borderColor: 'red',\n        backgroundColor: 'rgba(255,0,0,0.5)',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this) : null;\n  const barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        labels: 'People',\n        backgroundColor: ['green', 'red', 'blue'],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: true\n      },\n      title: {\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"Qu7aM2UtjsY9ajXU9lE2aj09jL8=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","backgroundColor","fill","barChart","value","legend","display","title","text","container"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,cAAR,QAA6B,WAA7B;AACA,SAAQC,IAAR,EAAaC,GAAb,QAAuB,iBAAvB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAIA,MAAMC,KAAK,GAAG,QAAiD;AAAA;;AAAA,MAAhD;AAACC,IAAAA,IAAI,EAAC;AAACC,MAAAA,SAAD;AAAWC,MAAAA,MAAX;AAAkBC,MAAAA;AAAlB,KAAN;AAAmCC,IAAAA;AAAnC,GAAgD;AAC3D,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACAC,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMa,QAAQ,GAAG,YAAS;AACvBD,MAAAA,YAAY,CAAC,MAAMX,cAAc,EAArB,CAAZ;AACF,KAFD;;AAGAY,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT;AAOA,QAAMC,SAAS,GACXH,SAAS,CAACI,MAAV,gBACC,QAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAACL,SAAS,CAACM,GAAV,CAAc;AAAA,YAAC;AAACC,UAAAA;AAAD,SAAD;AAAA,eAAUA,IAAV;AAAA,OAAd,CADL;AAEFC,MAAAA,QAAQ,EAAC,CAAC;AAENb,QAAAA,IAAI,EAACK,SAAS,CAACM,GAAV,CAAc;AAAA,cAAC;AAACV,YAAAA;AAAD,WAAD;AAAA,iBAAeA,SAAf;AAAA,SAAd,CAFC;AAGNa,QAAAA,KAAK,EAAC,UAHA;AAINC,QAAAA,WAAW,EAAC;AAJN,OAAD,EAMP;AACEf,QAAAA,IAAI,EAACK,SAAS,CAACM,GAAV,CAAc;AAAA,cAAC;AAACT,YAAAA;AAAD,WAAD;AAAA,iBAAYA,MAAZ;AAAA,SAAd,CADP;AAEEY,QAAAA,KAAK,EAAC,QAFR;AAGEC,QAAAA,WAAW,EAAC,KAHd;AAIEC,QAAAA,eAAe,EAAC,mBAJlB;AAKEC,QAAAA,IAAI,EAAC;AALP,OANO;AAFP;AADN;AAAA;AAAA;AAAA;AAAA,UADD,GAiBK,IAlBT;AAqBA,QAAMC,QAAQ,GACVjB,SAAS,gBACR,QAAC,GAAD;AACD,IAAA,IAAI,EAAE;AACHS,MAAAA,MAAM,EAAC,CAAC,UAAD,EAAY,WAAZ,EAAwB,QAAxB,CADJ;AAEHG,MAAAA,QAAQ,EAAC,CAAC;AACNH,QAAAA,MAAM,EAAC,QADD;AAENM,QAAAA,eAAe,EAAC,CAAC,OAAD,EAAS,KAAT,EAAe,MAAf,CAFV;AAGNhB,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACkB,KAAX,EAAiBhB,SAAS,CAACgB,KAA3B,EAAiCjB,MAAM,CAACiB,KAAxC;AAHC,OAAD;AAFN,KADL;AASD,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAC;AAACC,QAAAA,OAAO,EAAC;AAAT,OADF;AAELC,MAAAA,KAAK,EAAC;AAACC,QAAAA,IAAI,EAAE,oBAAmBnB,OAAQ;AAAlC;AAFD;AATR;AAAA;AAAA;AAAA;AAAA,UADQ,GAcL,IAfR;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC0B,SAAvB;AAAA,cACIpB,OAAO,GAACc,QAAD,GAAUV;AADrB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAtDD;;GAAMT,K;;KAAAA,K;AAwDN,eAAeA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\n\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n    const [dailyData,setDailyData]= useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n           setDailyData(await fetchDailyData()) ;\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    \r\n    const lineChart=(\r\n        dailyData.length?\r\n        (<Line \r\n         data={{\r\n             labels:dailyData.map(({date})=>date),\r\n             datasets:[{\r\n                 \r\n                 data:dailyData.map(({confirmed})=>confirmed),\r\n                 label:'Infected',\r\n                 borderColor:'#333ff',\r\n                 \r\n             },{ \r\n                 data:dailyData.map(({deaths})=>deaths),\r\n                 label:'Deaths',\r\n                 borderColor:'red',\r\n                 backgroundColor:'rgba(255,0,0,0.5)',\r\n                 fill:true}],\r\n         }}\r\n         />):null\r\n\r\n    );\r\n    const barChart=(\r\n        confirmed?\r\n        (<Bar\r\n        data={{\r\n           labels:['Infected','Recovered','Deaths'],\r\n           datasets:[{\r\n               labels:'People',\r\n               backgroundColor:['green','red','blue'],\r\n               data:[confirmed.value,recovered.value,deaths.value]\r\n           }]\r\n        }}\r\n        options={{\r\n            legend:{display:true},\r\n            title:{text:`Current state in ${country}`},\r\n        }}\r\n        />):null\r\n    );\r\n        \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n           {country?barChart:lineChart}  \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}