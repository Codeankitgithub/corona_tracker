{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{NativeSelect,FormControl}from'@material-ui/core';import{fetchCountries}from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CountryPicker=function CountryPicker(_ref){var handleCountryChange=_ref.handleCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[setFetchedCountries]);return/*#__PURE__*/_jsx(\"div\",{className:\"row \",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-12 main2\",children:/*#__PURE__*/_jsx(FormControl,{children:/*#__PURE__*/_jsxs(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return handleCountryChange(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Global\"}),fetchedCountries.map(function(country,i){return/*#__PURE__*/_jsx(\"option\",{value:country,children:country},i);})]})})})});};export default CountryPicker;","map":{"version":3,"sources":["C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","e","target","value","map","country","i"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,YAAR,CAAqBC,WAArB,KAAuC,mBAAvC,CAEA,OAAQC,cAAR,KAA6B,WAA7B,C,wFAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA2B,IAAzBC,CAAAA,mBAAyB,MAAzBA,mBAAyB,CAC7C,cAA8CN,QAAQ,CAAC,EAAD,CAAtD,wCAAOO,gBAAP,eAAwBC,mBAAxB,eACAP,SAAS,CAAC,UAAI,CACV,GAAMQ,CAAAA,QAAQ,2FAAG,+IACdD,mBADc,uBACYJ,CAAAA,cAAc,EAD1B,qHAAH,kBAARK,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKP,CAACD,mBAAD,CALO,CAAT,CAOA,mBACI,YAAK,SAAS,CAAC,MAAf,uBACE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,WAAD,wBACC,MAAC,YAAD,EAAc,YAAY,CAAC,EAA3B,CAA8B,QAAQ,CAAE,kBAACE,CAAD,QAAKJ,CAAAA,mBAAmB,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB,EAAxC,wBACG,eAAQ,KAAK,CAAC,EAAd,oBADH,CAEIL,gBAAgB,CAACM,GAAjB,CAAqB,SAACC,OAAD,CAASC,CAAT,qBAAa,eAAgB,KAAK,CAAED,OAAvB,UAAiCA,OAAjC,EAAaC,CAAb,CAAb,EAArB,CAFJ,GADD,EADF,EADF,EADJ,CAYH,CArBD,CAuBA,cAAeV,CAAAA,aAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\n\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries,setFetchedCountries]= useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n           setFetchedCountries(await fetchCountries()) ;\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n   \r\n    return (\r\n        <div className=\"row \">\r\n          <div className=\"col-12 main2\">\r\n            <FormControl >\r\n             <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i)=><option key={i} value={country}>{country}</option>)}\r\n             </NativeSelect>\r\n           </FormControl>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n"]},"metadata":{},"sourceType":"module"}