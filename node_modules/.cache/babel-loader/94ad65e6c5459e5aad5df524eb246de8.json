{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{fetchDailyData}from'../../api';import{Line,Bar}from'react-chartjs-2';import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,deaths=_ref$data.deaths,recovered=_ref$data.recovered,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/_jsx(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:'Infected',borderColor:'#333ff'},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:'Deaths',borderColor:'red',backgroundColor:'rgba(255,0,0,0.5)',fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/_jsx(Bar,{data:{labels:['Infected','Recovered','Deaths'],datasets:[{label:\"Current stats of covid in \".concat(country),backgroundColor:['green','blue','red'],data:[confirmed.value,recovered.value,deaths.value]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-10 main3\",children:country?barChart:lineChart})});};export default Chart;","map":{"version":3,"sources":["C:/Users/ravik/Desktop/covid_tracker_react/covid_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","Chart","data","confirmed","deaths","recovered","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","backgroundColor","fill","barChart","value","legend","display","title","text"],"mappings":"0gBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OAAQC,cAAR,KAA6B,WAA7B,CACA,OAAQC,IAAR,CAAaC,GAAb,KAAuB,iBAAvB,C,2CAKA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAiD,oBAA/CC,IAA+C,CAAzCC,SAAyC,WAAzCA,SAAyC,CAA/BC,MAA+B,WAA/BA,MAA+B,CAAxBC,SAAwB,WAAxBA,SAAwB,CAAbC,OAAa,MAAbA,OAAa,CAC3D,cAAgCV,QAAQ,CAAC,EAAD,CAAxC,wCAAOW,SAAP,eAAiBC,YAAjB,eACAX,SAAS,CAAC,UAAI,CACV,GAAMY,CAAAA,QAAQ,2FAAG,+IACdD,YADc,uBACKV,CAAAA,cAAc,EADnB,qHAAH,kBAARW,CAAAA,QAAQ,2CAAd,CAGAA,QAAQ,GACX,CALQ,CAKP,EALO,CAAT,CAOA,GAAMC,CAAAA,SAAS,CACXH,SAAS,CAACI,MAAV,cACC,KAAC,IAAD,EACA,IAAI,CAAE,CACFC,MAAM,CAACL,SAAS,CAACM,GAAV,CAAc,mBAAEC,CAAAA,IAAF,OAAEA,IAAF,OAAUA,CAAAA,IAAV,EAAd,CADL,CAEFC,QAAQ,CAAC,CAAC,CAENb,IAAI,CAACK,SAAS,CAACM,GAAV,CAAc,mBAAEV,CAAAA,SAAF,OAAEA,SAAF,OAAeA,CAAAA,SAAf,EAAd,CAFC,CAGNa,KAAK,CAAC,UAHA,CAINC,WAAW,CAAC,QAJN,CAAD,CAMP,CACEf,IAAI,CAACK,SAAS,CAACM,GAAV,CAAc,mBAAET,CAAAA,MAAF,OAAEA,MAAF,OAAYA,CAAAA,MAAZ,EAAd,CADP,CAEEY,KAAK,CAAC,QAFR,CAGEC,WAAW,CAAC,KAHd,CAIEC,eAAe,CAAC,mBAJlB,CAKEC,IAAI,CAAC,IALP,CANO,CAFP,CADN,EADD,CAiBK,IAlBT,CAqBA,GAAMC,CAAAA,QAAQ,CACVjB,SAAS,cACR,KAAC,GAAD,EACD,IAAI,CAAE,CACHS,MAAM,CAAC,CAAC,UAAD,CAAY,WAAZ,CAAwB,QAAxB,CADJ,CAEHG,QAAQ,CAAC,CAAC,CACNC,KAAK,qCAA8BV,OAA9B,CADC,CAENY,eAAe,CAAC,CAAC,OAAD,CAAS,MAAT,CAAgB,KAAhB,CAFV,CAGNhB,IAAI,CAAC,CAACC,SAAS,CAACkB,KAAX,CAAiBhB,SAAS,CAACgB,KAA3B,CAAiCjB,MAAM,CAACiB,KAAxC,CAHC,CAAD,CAFN,CADL,CASD,OAAO,CAAE,CACLC,MAAM,CAAC,CAACC,OAAO,CAAC,KAAT,CADF,CAELC,KAAK,CAAC,CAACD,OAAO,CAAC,IAAT,CAAcE,IAAI,4BAAqBnB,OAArB,CAAlB,CAFD,CATR,EADQ,CAcL,IAfR,CAmBA,mBACI,YAAK,SAAS,CAAC,KAAf,uBACG,YAAK,SAAS,CAAC,cAAf,UACCA,OAAO,CAACc,QAAD,CAAUV,SADlB,EADH,EADJ,CAOH,CAxDD,CA0DA,cAAeT,CAAAA,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\n\r\n\r\n\r\n\r\nconst Chart = ({data:{confirmed,deaths,recovered},country}) => {\r\n    const [dailyData,setDailyData]= useState([]);\r\n    useEffect(()=>{\r\n        const fetchAPI = async()=>{\r\n           setDailyData(await fetchDailyData()) ;\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    \r\n    const lineChart=(\r\n        dailyData.length?\r\n        (<Line \r\n         data={{\r\n             labels:dailyData.map(({date})=>date),\r\n             datasets:[{\r\n                 \r\n                 data:dailyData.map(({confirmed})=>confirmed),\r\n                 label:'Infected',\r\n                 borderColor:'#333ff',\r\n                 \r\n             },{ \r\n                 data:dailyData.map(({deaths})=>deaths),\r\n                 label:'Deaths',\r\n                 borderColor:'red',\r\n                 backgroundColor:'rgba(255,0,0,0.5)',\r\n                 fill:true}],\r\n         }}\r\n         />):null\r\n\r\n    );\r\n    const barChart=(\r\n        confirmed?\r\n        (<Bar\r\n        data={{\r\n           labels:['Infected','Recovered','Deaths'],\r\n           datasets:[{\r\n               label:`Current stats of covid in ${country}`,\r\n               backgroundColor:['green','blue','red'],\r\n               data:[confirmed.value,recovered.value,deaths.value]\r\n           }]\r\n        }}\r\n        options={{\r\n            legend:{display:false},\r\n            title:{display:true,text:`Current state in ${country}`},\r\n        }}\r\n        />):null\r\n    );\r\n        \r\n    \r\n    return (\r\n        <div className=\"row\" >\r\n           <div className=\"col-10 main3\">\r\n           {country?barChart:lineChart} \r\n           </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}