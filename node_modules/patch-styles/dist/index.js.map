{"version":3,"file":"index.js","sources":["../src/helper-methods/get-mapped-class-name-props.ts","../src/helper-methods/patch-class-names-of-children.ts","../src/index.tsx"],"sourcesContent":["import { ClassNamesMap } from '../utils';\n\nconst getMappedClassNameProps = <T>(props: T, extraProps: string[], namesMap: ClassNamesMap): Partial<T> | null => {\n  const mappedProps: T = <T>{};\n  const propsToMap = Object.keys(props).filter((key) => key === 'className' || extraProps.includes(key));\n\n  propsToMap.forEach((key) => {\n    mappedProps[key] = mapAndMergeClassNames(props[key], namesMap);\n  });\n\n  return propsToMap.length ? mappedProps : null;\n};\n\nexport default getMappedClassNameProps;\n\nconst mapAndMergeClassNames = (className: string | string[], namesMap: ClassNamesMap): string => {\n  const namesArray = Array.isArray(className) ? className : [className];\n  const splitNamesArr = namesArray.flatMap((name) => splitClassName(name));\n\n  return splitNamesArr.map((name) => namesMap[name] ?? name).join(' ');\n};\n\nconst splitClassName = (className: string): string[] => {\n  return className.split(/\\s+/g);\n};\n","import React, { PropsWithChildren, ReactElement, ReactNode } from 'react';\nimport { ChildPropsType, ClassNamesMap } from '../utils';\nimport getMappedClassNameProps from './get-mapped-class-name-props';\n\nconst patchClassNamesOfChildren = (namesMap: ClassNamesMap, extraProps: string[], children: ReactNode): ReactNode => {\n  const childOrChildren = patchClassNamesWithChildrenMap(namesMap, extraProps, children);\n\n  if (!Array.isArray(children) && !React.isValidElement(children)) {\n    return children;\n  }\n\n  try {\n    React.Children.only(children);\n    return Array.isArray(childOrChildren) ? childOrChildren[0] : childOrChildren;\n  } catch (err) {\n    return childOrChildren;\n  }\n};\n\nexport default patchClassNamesOfChildren;\n\nconst patchClassNamesWithChildrenMap = (namesMap: ClassNamesMap, extraProps: string[], children: ReactNode): ReactNode => {\n  return React.Children.map<ReactNode, ReactNode>(children, (child: ReactNode) => {\n    if (!React.isValidElement<PropsWithChildren<ChildPropsType>>(child)) {\n      return child;\n    }\n\n    return patchClassNamesForReactNode(child, namesMap, extraProps);\n  });\n};\n\ntype ChildElement = ReactElement<PropsWithChildren<ChildPropsType>>;\n\nconst patchClassNamesForReactNode = (child: ChildElement, namesMap: ClassNamesMap, extraProps: string[]): ReactNode => {\n  const allMappedOrPatchedProps = getAllMappedOrPatchedProps(child.props, extraProps, namesMap);\n  const patchedChildren = patchClassNamesOfChildren(namesMap, extraProps, child.props.children);\n\n  const hasValidChildren = React.Children.toArray(child.props.children).some((node) => React.isValidElement(node));\n\n  if (!allMappedOrPatchedProps && !hasValidChildren) {\n    return child;\n  }\n\n  return React.cloneElement(child, allMappedOrPatchedProps ?? {}, patchedChildren);\n};\n\nconst getAllMappedOrPatchedProps = <T>(props: T, extraProps: string[], namesMap: ClassNamesMap): Partial<T> | null => {\n  const mappedClassNameProps = getMappedClassNameProps(props, extraProps, namesMap);\n  const patchedNodeProps = getPatchedNodeProps(props, extraProps, namesMap);\n\n  if (!mappedClassNameProps && !patchedNodeProps) {\n    return null;\n  }\n\n  return {\n    ...mappedClassNameProps,\n    ...patchedNodeProps,\n  };\n};\n\nconst getPatchedNodeProps = <T>(props: T, extraProps: string[], namesMap: ClassNamesMap): Partial<T> | null => {\n  const patchedNodeProps: T = <T>{};\n  const propsToMap = Object.keys(props).filter((key) => React.isValidElement(props[key]));\n\n  propsToMap.forEach((key) => {\n    patchedNodeProps[key] = patchClassNamesForReactNode(props[key], namesMap, extraProps);\n  });\n\n  return propsToMap.length ? patchedNodeProps : null;\n};\n","import React, { FC, PropsWithChildren } from 'react';\nimport { ClassNamesMap } from './utils';\nimport patchClassNamesOfChildren from './helper-methods/patch-class-names-of-children';\n\nexport interface Props {\n  classNames: ClassNamesMap;\n  extraProps?: string | string[] | null;\n}\n\nconst PatchStyles: FC<PropsWithChildren<Props>> = ({ classNames, extraProps, children }) => {\n  if (!children) {\n    throw new Error('ApplyStyles should always have children to apply styles too');\n  }\n\n  const extraPropsArr = Array.isArray(extraProps) ? extraProps : [extraProps];\n  const extraPropsSplit = extraPropsArr.flatMap((props) => (props ?? '').split(/\\s*,\\s*/g));\n\n  return (\n    <React.Fragment>\n      {patchClassNamesOfChildren(classNames, extraPropsSplit, children)}\n    </React.Fragment>\n  );\n};\n\nexport default PatchStyles;\n"],"names":["getMappedClassNameProps","props","extraProps","namesMap","mappedProps","propsToMap","Object","keys","filter","key","includes","forEach","mapAndMergeClassNames","length","className","namesArray","Array","isArray","splitNamesArr","flatMap","name","splitClassName","map","join","split","patchClassNamesOfChildren","children","childOrChildren","patchClassNamesWithChildrenMap","React","isValidElement","Children","only","err","child","patchClassNamesForReactNode","allMappedOrPatchedProps","getAllMappedOrPatchedProps","patchedChildren","hasValidChildren","toArray","some","node","cloneElement","mappedClassNameProps","patchedNodeProps","getPatchedNodeProps","PatchStyles","classNames","Error","extraPropsArr","extraPropsSplit","Fragment"],"mappings":"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"}